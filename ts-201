// Define the Employee interface
interface Employee {
  name: string;
  lastname: string;
  department: string;
  task: string;
  manager: string;
}

/**
 * Gets unique values for a specific property of employees grouped by manager
 * @param employees Array of employee objects
 * @param property Property name to extract unique values from (e.g., 'department', 'task')
 * @returns An object with managers as keys and arrays of unique property values as values
 */
function getUniqueValuesByManager<K extends keyof Omit<Employee, 'manager'>>(
  employees: Employee[],
  property: K
): Record<string, Employee[K][]> {
  const result: Record<string, Set<Employee[K]>> = {};
  
  // Group values by manager
  employees.forEach(employee => {
    const { manager } = employee;
    
    if (!result[manager]) {
      result[manager] = new Set<Employee[K]>();
    }
    
    result[manager].add(employee[property]);
  });
  
  // Convert Sets to arrays
  const finalResult: Record<string, Employee[K][]> = {};
  
  for (const manager in result) {
    finalResult[manager] = Array.from(result[manager]);
  }
  
  return finalResult;
}

// Example usage:
const employees: Employee[] = [
  { name: 'John', lastname: 'Doe', department: 'Engineering', task: 'Coding', manager: 'Alice' },
  { name: 'Jane', lastname: 'Smith', department: 'Engineering', task: 'Testing', manager: 'Alice' },
  { name: 'Bob', lastname: 'Johnson', department: 'Marketing', task: 'Campaigns', manager: 'Charlie' },
  { name: 'Sarah', lastname: 'Williams', department: 'Engineering', task: 'Coding', manager: 'Alice' },
  { name: 'Mike', lastname: 'Brown', department: 'Marketing', task: 'Social Media', manager: 'Charlie' },
  { name: 'Emily', lastname: 'Davis', department: 'HR', task: 'Recruiting', manager: 'David' }
];

// Get unique departments by manager
const uniqueDepartmentsByManager = getUniqueValuesByManager(employees, 'department');
console.log('Unique departments by manager:', uniqueDepartmentsByManager);

// Get unique tasks by manager
const uniqueTasksByManager = getUniqueValuesByManager(employees, 'task');
console.log('Unique tasks by manager:', uniqueTasksByManager);
